trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
          command: 'build'
          projects: '**/*.csproj'
          feedsToUse: 'select'
          arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    - task: CopyFiles@2
      displayName: Copy Files
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      displayName: Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: Docker@2
      inputs:
       command: 'buildAndPush'
       Dockerfile: '$(Build.SourcesDirectory)/RentMotorBike/Dockerfile'
       tags: 'app$(Build.BuildId)'
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'AWS DEPLOY'
        regionName: 'us-east-1'
        sourceImageName: 'app$(Build.BuildId)'
        repositoryName: 'motor-rent-bike'